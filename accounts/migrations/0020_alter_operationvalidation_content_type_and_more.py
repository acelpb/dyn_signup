# Generated by Django 5.2.6 on 2025-09-21 21:41

import django.db.models.deletion
from django.db import migrations, models


def create_group_and_assign_users(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")

    # Use the swappable user model
    group, _ = Group.objects.get_or_create(name="Trésorier")

    # ContentTypes for Operation
    op_ct = ContentType.objects.get(app_label="accounts", model="operation")
    # Trésorier can view and modify opearations
    view_operation = Permission.objects.get(
        codename="view_operation", content_type=op_ct
    )
    group.permissions.add(view_operation)

    change_operation = Permission.objects.get(
        codename="change_operation", content_type=op_ct
    )
    group.permissions.add(change_operation)

    # Can do everything for OperationValidation, note de frais, bills
    for model in ["operationvalidation", "bill", "expensereport"]:
        opv_ct = ContentType.objects.get(app_label="accounts", model=model)
        for perm in Permission.objects.filter(content_type=opv_ct):
            group.permissions.add(perm)

    # can View Participants and Signup Groups
    for perm in Permission.objects.filter(codename="view_participant"):
        group.permissions.add(perm)
    for perm in Permission.objects.filter(codename="view_signup"):
        group.permissions.add(perm)
    for perm in Permission.objects.filter(codename="view_user"):
        group.permissions.add(perm)
    for perm in Permission.objects.filter(codename="view_bill"):
        group.permissions.add(perm)


def remove_group_and_assignments(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    group = Group.objects.filter(name="Trésorier").first()
    if group:
        group.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0019_alter_operationvalidation_operation_and_more"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.AlterField(
            model_name="operationvalidation",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AlterField(
            model_name="operationvalidation",
            name="object_id",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.RunPython(
            create_group_and_assign_users, remove_group_and_assignments
        ),
    ]
